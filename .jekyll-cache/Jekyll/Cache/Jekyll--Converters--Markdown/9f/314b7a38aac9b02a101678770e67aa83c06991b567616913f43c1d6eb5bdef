I"$!<p>오늘은 @IBOutlet와 @IBAction 에 대해 정리해보겠습니다.</p>

<h1 id="-iboutlet">☝🏻 @IBOutlet</h1>
<p>먼저 @IBOutlet 입니다. <br />
@IBOutlet은 UI를 코드로 바꿔주는 작업을 한다고 생각하면 됩니다. <br />
더 쉽게 생각하면 화면에 UI 객체를 만들어 주는 키워드입니다.</p>

<p>저는 @IBOutlet을 어원에 접근해 이해하는 것이 쉽다고 생각하는데요.<br />
IBOutlet은 <mark>IB(interface builder) + Outlet으로, Outlet(배출)하여 화면에 어떠한 영향을 주겠다! </mark>라는 뜻입니다.<br />
이와 비슷하게 IBAction은 화면에서 어떠한 action을 취하게 하는 것이죠.</p>

<h4 id="ibaction">@IBAction</h4>
<p>IBAction은 이와 반대입니다. <br />
<mark>스토리보드상에서 이벤트가 발생하면 @IBAction을 통해 액션이 발생하게 만들죠.</mark></p>

<h1 id="-iboutlet-사용방식">✌🏻 IBOutlet 사용방식</h1>

<p>예를 하나 들어보겠습니다.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">mainLabel</span><span class="p">:</span> <span class="kt">UILabel</span><span class="o">!</span>

<span class="n">mainLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"안녕하세요!!!"</span>
<span class="n">mainLabel</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="err">#</span><span class="nf">colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mf">0.3411764801</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mf">0.6235294342</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mf">0.1686274558</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
<span class="c1">//mainLabel.backgroundColor = UIColor.yellow</span>
<span class="n">mainLabel</span><span class="o">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="err">#</span><span class="nf">colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mf">0.06274510175</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mf">0.1921568662</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>

</code></pre></div></div>

<p>위 코드에서 mainLabel이라는 이름의 UILabel을 선언해준 모습입니다.
여기서 굳이 mainLabel을 선언해주는 이유는 무엇일까요 ?</p>

<p>그 이유는 속성과 관련있습니다. 
UILabel은 클래스로 선언되어 있습니다.
(viewController.swift 파일에서 UILabel를 option키와 함께 클릭한다면 관련 설명이 나타나는 것을 확인할 수 있습니다.)</p>

<div>
    <img src="/assets/images/UILabel_option.png" alt="" width="70%" min-width="700px" itemprop="image" />
</div>

<p>클래스의 속성값에 접근해 원하는 모양으로 만들어주는 것이죠. 그렇기에 코드상에서 변수로 선언하는 것입니다.
정리하자면 UILabel클래스를 이루고 있는 속성값을 사용하기 위함입니다.!!!</p>

<h1 id="-iboutlet으로-선언된-변수-사용-방법">🤟🏻 @IBOutlet으로 선언된 변수 사용 방법</h1>

<p>mainLabel의 textAlignment에 하나의 값을 할당하고 싶다면 어떻게 할당해야할까요 ?
정답은 값을 할당하기 위해 그 값의 타입이 맞아야 합니다.. 따라서 <mark>타입을 설정해주고 그 타입이 가지고 있는 속성값을 선언해주면</mark> 원하는 값이 들어가게 되는 것이죠.</p>

<h1 id="전체코드">전체코드</h1>
<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//</span>
<span class="c1">//  ViewController.swift</span>
<span class="c1">//  MyfirstApp</span>
<span class="c1">//</span>
<span class="c1">//  Created by plump-goose on 2022/08/25.</span>
<span class="c1">//</span>

<span class="kd">import</span> <span class="kt">UIKit</span>

<span class="kd">class</span> <span class="kt">ViewController</span><span class="p">:</span> <span class="kt">UIViewController</span> <span class="p">{</span>

    <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">mainLabel</span><span class="p">:</span> <span class="kt">UILabel</span><span class="o">!</span>
    <span class="kd">@IBOutlet</span> <span class="k">weak</span> <span class="k">var</span> <span class="nv">myButton</span><span class="p">:</span> <span class="kt">UIButton</span><span class="o">!</span>
    
    <span class="k">override</span> <span class="kd">func</span> <span class="nf">viewDidLoad</span><span class="p">()</span> <span class="p">{</span>
        <span class="c1">// 함수를 실행하고 있구나 !</span>
        <span class="k">super</span><span class="o">.</span><span class="nf">viewDidLoad</span><span class="p">()</span>
        <span class="c1">// Do any additional setup after loading the view.</span>
    <span class="p">}</span>
    
    <span class="kd">@IBAction</span> <span class="kd">func</span> <span class="nf">buttonPressed</span><span class="p">(</span><span class="n">_</span> <span class="nv">sender</span><span class="p">:</span> <span class="kt">UIButton</span><span class="p">)</span> <span class="p">{</span>
        
        
        <span class="c1">// Label의 구성요소</span>
        <span class="n">mainLabel</span><span class="o">.</span><span class="n">text</span> <span class="o">=</span> <span class="s">"안녕하세요!!!"</span>
        
        <span class="n">mainLabel</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="err">#</span><span class="nf">colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mf">0.3411764801</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mf">0.6235294342</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mf">0.1686274558</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        <span class="c1">//mainLabel.backgroundColor = UIColor.yellow</span>
        
        <span class="n">mainLabel</span><span class="o">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="err">#</span><span class="nf">colorLiteral</span><span class="p">(</span><span class="nv">red</span><span class="p">:</span> <span class="mf">0.06274510175</span><span class="p">,</span> <span class="nv">green</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">blue</span><span class="p">:</span> <span class="mf">0.1921568662</span><span class="p">,</span> <span class="nv">alpha</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
        
        <span class="c1">// mainLabel.textAlignment = NSTextAlignment.right</span>
        <span class="c1">// textAlignment의 속성값을 따라간다.</span>
        
        <span class="n">myButton</span><span class="o">.</span><span class="nf">setTitleColor</span><span class="p">(</span><span class="o">.</span><span class="n">black</span><span class="p">,</span> <span class="nv">for</span><span class="p">:</span> <span class="o">.</span><span class="n">normal</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>


</code></pre></div></div>

<hr />

<h1 id="정리">정리</h1>
<p><strong><mark>IBOutlet</mark></strong> : UI를 다루기 위해 사용되는 키워드<br />
<strong><mark>IBACtion</mark></strong> : UI에 이벤트가 발생했을 때 원하는 이벤트를 하게 해주는 키워드</p>

<p>출처 : [앨런 iOS 아이폰 앱 개발 (15개의 앱을 만들면서 근본원리부터 배우는 UIKit)</p>
:ET